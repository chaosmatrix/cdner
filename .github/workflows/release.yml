name: Go

on:
  release:
    types: [released]
  workflow_dispatch:
    inputs:
      TAG_NAME:
        required: true

env:
  TAG_NAME: ${{ github.event.inputs.TAG_NAME || github.event.release.tag_name }}
  REPO_NAME: ${{ github.event.repository.name || github.event.pull_request.base.repo.name }}
  if: runner.os == 'Windows'
  OS_SUFFIX: .exe
  

jobs:

  # https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        #os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2

      # Debug github action on linux platform
      #- name: Dump github context
      #  run:   echo "$GITHUB_CONTEXT"
      #  shell: bash
      #  env:
      #   GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
          
      - name: Build
        run: go build -o cdner-${{ env.TAG_NAME }}-${{ runner.os }}${{ env.OS_SUFFIX }} -v ./...

      - name: Test
        run: go test -v ./...
      # step6: upload artifacts
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.REPO_NAME }}-${{ env.TAG_NAME }}-${{ runner.os }}${{ env.OS_SUFFIX }}
          path: ./${{ env.REPO_NAME }}-${{ env.TAG_NAME }}-${{ runner.os }}${{ env.OS_SUFFIX }}

      # step7: create release
      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ env.REPO_NAME }}-${{ env.TAG_NAME }}-${{ runner.os }}${{ env.OS_SUFFIX }}

  release-data:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.REPO_NAME }}-data
          path: ./data

      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "data/**"
